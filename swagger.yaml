openapi: 3.0.2
info:
  title: BarBank
  version: 1.0.0
paths:
  /users:
    summary: Path used to manage the list of users.
    description: >-
      The REST endpoint/path used to list and create zero or more `user` entities.  This path contains a
      `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `user` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      tags:
        - users
      responses:
        '201':
          description: Successful response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                'user validation failed:':
                  value:
                    error: >-
                      user validation failed: (?<parameterName>[^:]+): Path
                      `(?<parameterNameAgain>[^`]+)` is required.(, ([^:]+): Path
                      `([^`]+)` is required.){0,2}
          description: Parameter missing
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                username already exists:
                  value:
                    error: username already exists
          description: username already exists
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Parameter(s) value too short/long:
                  value:
                    error: >-
                      Path `(?<parameterName>.+)` \(`(?<sampleValue>.+)`\) is
                      (longer|shorter) than the (maximum|minimum) allowed length
                      \((?<requiredLength>\d+)\)
          description: 'Parameter(s) value too short/long:'
      operationId: createuser
      summary: Create a user
      description: Creates a new instance of a `user`.
  /sessions:
    summary: Path used to manage the list of sessions.
    description: >-
      The REST endpoint/path used to list and create zero or more `session` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `session` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
            examples:
              POST /sessions request:
                value:
                  username: peeter
                  password: qwerty1234
        required: true
      tags:
        - sessions
      responses:
        '200':
          description: Successful login
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Required parameter missing:
                  value:
                    error: Invalid authorization format
          description: Required parameter missing
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid credentials:
                  value:
                    error: Invalid credentials
          description: Invalid credentials
      operationId: createsession
      summary: Create a session
      description: Creates a new instance of a `session`.
    delete:
      tags:
        - sessions
      responses:
        '204':
          description: Session successfuly deleted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid authorization format:
                  value:
                    error: Invalid authorization format
          description: Bad request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid token:
                  value:
                    error: Invalid token
                Missing authorization:
                  value:
                    error: Missing authorization
          description: Problem with authorization
      security:
        -
          Bearer: []
      summary: Deletes a session
      description: Deletes given session with an id specified in authorization header
  /users/current:
    get:
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
              examples:
                GET /users/current response:
                  value: |-
                    {
                        "accounts": [
                            {
                                "account_number": "EExz2zxd72u",
                                "balance": 10000,
                                "currency": "EUR",
                                "name": "Main",
                                "userId": "6165591f9ddb320d85751d78"
                            }
                        "username": "peeter",
                        "name": "Peeter"
                    }
          description: Successful request
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Required parameter missing:
                  value:
                    error: Invalid authorization format
          description: Required parameter missing
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Missing Authorization header:
                  value:
                    error: Missing Authorization header
                Invalid token:
                  value:
                    error: Invalid token
          description: Unauthorized
      security:
        -
          Bearer: []
      summary: GET active user data
      description: Returns active `user` data
  /transactions:
    summary: Path used to manage the list of transactions.
    description: >-
      The REST endpoint/path used to list and create zero or more `Transaction` entities.  This path
      contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
    post:
      requestBody:
        description: A new `Transaction` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
        required: true
      tags:
        - transactions
      responses:
        '201':
          description: Successful response.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Invalid amount:
                  value:
                    error: Invalid amount
          description: Invalid amount
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Missing authorization:
                  value:
                    error: Missing authorization
                Invalid token:
                  value:
                    error: Invalid token
          description: Problem with authorization
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Insufficient funds:
                  value:
                    error: Insufficient funds
          description: Insufficient funds
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Forbidden:
                  value:
                    error: AccountFrom belongs to another user
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                accountFrom does not exist:
                  value:
                    error: accountFrom does not exist
                Destination bank not found:
                  value:
                    error: Destination bank not found
          description: Not found
      security:
        -
          Bearer: []
      operationId: createTransaction
      summary: Create a Transaction
      description: Creates a new instance of a `Transaction`.
  /transactions/b2b:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
        required: true
      tags:
        - transactions
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Missing parameter:
                  value:
                    error: Missing parameter
                Parameter is not string:
                  value:
                    error: Parameter is not string
                Unknown sending bank:
                  value:
                    error: Unknown sending bank
                Signature verification failed:
                  value:
                    error: Signature verification failed
          description: Bad Request
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Internal server error:
                  value:
                    error: internal server error
          description: Unknown error
      security:
        -
          Bearer: []
      summary: Create b2b
      description: Create b2b
components:
  schemas:
    user:
      title: Root Type for user
      description: ''
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
      example:
        username: s1
        password: qwertyuiop
        name: jep
    error:
      title: Root Type for error
      description: ''
      type: object
      properties:
        error:
          type: string
      example:
        error: some text
    session:
      title: Root Type for session
      description: ''
      type: object
      properties:
        token:
          type: string
      example:
        username: s1
        password: qwertyuiop
    transaction:
      title: Root Type for Transaction
      description: ''
      type: object
      properties:
        accountFrom:
          type: string
        accountTo:
          type: string
        amount:
          format: int32
          type: integer
        currency:
          type: string
        explanation:
          type: string
      example:
        accountFrom: bf6423052138
        accountTo: bf6864214538
        amount: 0
        currency: EUR
        explanation: lol
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
tags:
  -
    name: users
    description: ''
  -
    name: sessions
    description: ''
  -
    name: transactions
    description: ''
